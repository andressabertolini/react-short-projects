{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","input","setInput","useState","edit","value","inputRef","useRef","useEffect","current","focus","handleChange","e","target","_jsx","className","onSubmit","preventDefault","id","Math","floor","random","text","children","_jsxs","_Fragment","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","submitUpdate","map","todo","index","isComplete","RiCheckboxLine","class","onClick","RiCheckboxBlankLine","RiCloseCircleLine","TiEdit","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.924d684d.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm (props){\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 1000),\r\n            text: input\r\n        })\r\n\r\n        setInput('');\r\n    }\r\n\r\n    return(\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Update your item\" \r\n                    value={input} \r\n                    name=\"text\" \r\n                    className=\"todo-input edit\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button edit\">Update</button>\r\n            </>\r\n            ): \r\n            (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input} \r\n                    name=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Add todo</button>\r\n            </>\r\n            )}\r\n                   </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine, RiCheckboxBlankLine, RiCheckboxLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}){\r\n\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: \"\"\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id){\r\n        return<TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div \r\n            className={todo.isComplete ? \"todo-row complete\": \"todo-row\"} \r\n            key={index}\r\n        >\r\n            {todo.isComplete ? (\r\n                <RiCheckboxLine class=\"checkbox-icon\" key={todo.id} onClick={() => completeTodo(todo.id)}/>\r\n            ) : (\r\n                <RiCheckboxBlankLine class=\"checkbox-icon\" key={todo.id} onClick={() => completeTodo(todo.id)}/>\r\n            )}\r\n            \r\n            <div className=\"todo-text\">\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete-icon\"\r\n                />\r\n                <TiEdit\r\n                    onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n                    className=\"edit-icon\"\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo;","import React, {useState} from 'react'\r\nimport TodoForm from \"./TodoForm\"\r\nimport Todo from \"./Todo\"\r\n\r\nfunction TodoList(){\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^s*$/.test(todo.text)){\r\n            return\r\n        }\r\n\r\n        //spread operator\r\n        const newTodos = [todo, ...todos]\r\n        \r\n        setTodos(newTodos)\r\n        console.log(todo, ...todos);\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^s*$/.test(newValue.text)){\r\n            return;\r\n        } \r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>What's the Plan for Today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo \r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import TodoList from \"./components/TodoList\"\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}